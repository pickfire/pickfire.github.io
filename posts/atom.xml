<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title>Pickfire posts</title><link href="pickfire.tk/posts"/><updated>2022-11-29T16:03:31Z</updated><author><name>Ivan Tham</name><email>pickfire@riseup.net</email></author><id>http://pickfire.tk/posts/atom.xml</id><link href="pickfire.tk/posts/atom.xml"/><entry><title>Raster Graphic -> Vector Graphic (by hand)</title><link href="http://pickfire.tk/posts/craft/fisher"/><updated>2020-05-23T13:24:47Z</updated><content type="html"><![CDATA[<h1>Raster Graphic -&gt; Vector Graphic (by hand)</h1><p>The advantages of <a href="https://en.wikipedia.org/wiki/Vector_graphics">Vector Graphic</a> over <a href="https://en.wikipedia.org/wiki/Raster_graphics">Raster Graphic</a>:</p><ul><li>Viewable at any zoom level</li><li>Smaller file size</li></ul><p>I have been given a task to change the fisherman's logo (15k) into a <a href="https://github.com/fisherman/fisherman/issues/76">high
resolution svg</a>. I am using
the <a href="https://inkscape.org/">inkscape editor</a> to do this task.</p><h2>Getting started</h2><p><a href="img/ink1.png"><img src="img/ink1.png" alt="inkscape" /></a></p><ol><li><strong>Import</strong> (<code>Ctrl+I</code>) the background.</li><li>Toggle the <strong>Layers</strong> with <code>Shift+Ctrl+L</code>.</li><li><em>Create</em> 2 <strong>new layers</strong> (one for the <strong>word</strong> and one for <strong>hook</strong>).
<ul><li><strong>Lock</strong> the <em>background layer</em> just to make sure it's safe.</li><li><em><strong>Tips:</strong></em> Lower the opacity on non-background to copy easier.</li><li><em><strong>Tips:</strong></em> Enter <code>4</code> to zoom to the width of the drawing.</li></ul></li></ol><h2>Drawing the words</h2><p><a href="img/ink2.png"><img src="img/ink2.png" alt="inkscape" /></a></p><ol><li><strong>Switch</strong> to the <em>second</em> layer (<code>Ctrl+PageUp</code>).</li><li>Use <code>Shift+F6</code> to <strong>draw</strong> the <em>curves and straight lines</em>.</li><li><strong>Select</strong> those words that have <em>inner part</em> (eg. <code>R</code>).</li><li>Use <strong>Subtract</strong> with <code>Ctrl+-</code> to remove those <em>inner parts</em>.</li><li><strong>Select</strong> those words that have <em>overlapped part</em> (eg. <code>RM</code>).</li><li>Use <strong>Union</strong> with <code>Ctrl++</code> for parts that are <em>overlapped</em>.</li></ol><h3>After drawing</h3><ol><li><strong>select all</strong> of it.</li><li>Toggle the <strong>Fill and Stroke</strong> with <code>Shift+Ctrl+L</code>.</li><li>Use a <em>flat color</em> for the <strong>fill</strong> and disable the <strong>stroke color</strong>.</li></ol><h2>Drawing the anchor</h2><p><a href="img/ink3.png"><img src="img/ink3.png" alt="inkscape" /></a></p><ol><li><strong>Switch</strong> to the <em>third</em> layer (<code>Ctrl+PageUp</code>).</li><li><strong>Hide</strong> (the eye button) the <em>second</em> layer to focus on the anchor.</li><li><strong>Draw</strong> the empty space (anchor) in the words and fill the gaps.
<ul><li><em><strong>Tips:</strong></em> Use a random color to draw the anchor to draw easier.</li></ul></li><li><strong>Select</strong> the anchor and toggle the <strong>Fill and Stroke</strong>.</li><li>Max out the options in the <strong>RGB</strong> section to make it white.</li></ol><h2>The final farewell</h2><p><a href="img/fisherman.svg"><img src="img/fisherman.svg" alt="inkscape" /></a></p><ol><li>In <strong>Document Properties</strong> (<code>Shift+Ctrl+D</code>), set custom size and resize page
to drawing.</li><li><strong>Save</strong> (<code>Ctrl+S</code>) the file as a backup copy.</li><li><strong>Delete</strong> the background layer and <strong>Unhide</strong> the other layers.</li><li><strong>Save As</strong> (<code>Shift+Ctrl+S</code>) the file as an <em>optimized svg</em>.
<ul><li><strong>Remove XML indentation</strong> and tons of stuff to keep it <strong>minimal</strong>.</li></ul></li><li><strong><em>TADA</em> Work done!</strong></li></ol>]]></content></entry><entry><title>Let's break the time barrier</title><link href="http://pickfire.tk/posts/learn/speed"/><updated>2020-05-23T13:21:34Z</updated><content type="html"><![CDATA[<h1>Let's break the time barrier</h1><p>Practise simple task that can help you to improve your daily performance.
Always remember:</p><blockquote><p>Practice makes perfect!</p></blockquote><h1>Time tracking</h1><p>Pomodoro Timer™, https://github.com/pickfire/spt</p><h1>Ambidextrous</h1><h5><strong>Note: This method that I am using won't work for chinese characters</strong></h5><p>One hand for (what rhymes with performance), two hands for performance.
Writing with two hands can have huge performance gain, just make sure you
practise it once in a while.</p><ol><li>Lines, geometry</li><li>Mirror</li><li>Duplicate</li><li>Rhythm</li><li>Speed</li></ol><h4>Touch Typing (Easy Job)</h4><p>Learn to type with all fingers that you have without looking, that's how the
keyboard is designed.</p><h1>Meditate</h1><p>Refresh your mind and purify your soul. Do only (and nothing else):</p><ol><li>Breathe</li><li>Breathe</li><li>Breathe</li></ol><p>A simple technique, do count from 10 to 1 and recount from 10 to 1.
A harder technique, do visualise yourself in a white dimension, safe and sound.</p><h1>Rapid Reading</h1><p>How to get from reading 200 words per minute to 500+ words per minutes</p><ul><li>Reduce distraction, it is better to close your ears when you read</li><li>Move your eyes slowly, if you can't use your finger as a pointer</li><li>Avoid sub-vocalization
<ul><li>do not <code>see -&gt; hear -&gt; understand</code></li><li>instead <code>see -&gt; understand</code></li></ul></li><li>Avoid regression - don't read the word &quot;Avoid regression&quot; again</li><li>Read words in chunk, eg. &quot;read all of these words in chunk&quot;</li></ul><h1>Day of Week</h1><p>Calculate the day of week (星期) using three fingers.</p><pre><code>---
   )
--------------
  一 | 二 | 三 )
---------------
   四 | 五 | 六 )
---------------
    |   | 日 )
-------------
    |   |   )        -&gt; Forward Direction
------------
</code></pre><!-- raw HTML omitted --><!-- raw HTML omitted --><p>I will normally point my thumb to the part of the day of the week and do calculations:</p><!-- raw HTML omitted -->]]></content></entry><entry><title>Simple Tools for Development Environment</title><link href="http://pickfire.tk/posts/linux/dev"/><updated>2020-05-23T13:20:43Z</updated><content type="html"><![CDATA[<h1>Simple Tools for Development Environment</h1><p>Development environment accustomed to me. <a href="https://github.com/pickfire/dotfiles">pickfire's dotfiles</a></p><h2>Window Manager</h2><p>Tiling window manager, I like <a href="//dwm.suckless.org">dwm</a>.</p><h3>dwmstatus</h3><p>Simple status bar for <a href="//dwm.suckless.org">dwm</a>, not click-able, not colour-able. Use a simple
C script to lower the processing cost as it runs every second. Current status:</p><pre><code>♪ 100% ⚡ AC │ ↓ 1.2k ↓ 0 │ / 80% ~ 70% │ 0.12 │ Mon Fed 28 00:00:00
</code></pre><h2>Terminal</h2><p>I use <a href="//st.suckless.org">st</a> as it is fast and support true colors (my
ultimate motive).</p><h2>Editor</h2><h4><strong>Note: I am not a participatant of the editor wars, I use vi-like keys just to prevent <em>»little-finger ache«</em></strong></h4><p><a href="//neovim.org">neovim</a> as a stylish vi-editor with fast
<a href="https://github.com/junegunn/vim-plug">vim-plug</a> as the plugin manager.</p>]]></content></entry><entry><title>New system setup: Coreboot + Grub + Luks + Btrfs + Alpine</title><link href="http://pickfire.tk/posts/linux/setup"/><updated>2019-08-04T11:22:34Z</updated><content type="html"><![CDATA[<h1>New system setup: Coreboot + Grub + Luks + Btrfs + Alpine</h1><p>I used Arch Linux for some time, should switch to Alpine Linux for simplicity.
The setup will be on thinkpad x220 brought from <a href="//hendry.iki.fi/">Kai Hendry</a>, thanks to
him for keeping his laptop in good state. :)</p><p>Quick overview:</p><ul><li>Bootloader: Coreboot + Grub payload (testing)</li><li>Encryption: Dm-crypt LUKS + key file from sd card</li><li>Filesystem: Btrfs raid 0 (data) + raid 1 (metadata)</li><li>Root setup: Alpine Linux</li></ul><h2>Setting up Coreboot</h2><p>Why switch to coreboot? Default firmware took 8s to boot. Now <code>x &lt; 2s</code>. Haha!</p><ol><li><p>Preparation</p><ol><li>Get raspberry pi 2 and <a href="//www.ebay.com/itm/162284060668?_trksid=p2057872.m2749.l2649&amp;ssPageName=STRK%3AMEBIDX%3AIT">SOIC clip + probe cables</a></li><li>Install flashrom and build coreboot with grub2 payload</li><li>Prerequisite: <code>make crossgcc-i386 CPUS=4</code>, <code>make iasl</code></li></ol></li><li><p>Set up flasher - <a href="//www.coreboot.org/Board:lenovo/x220">coreboot wiki</a> and <a href="//tylercipriani.com/blog/2016/11/13/coreboot-on-the-thinkpad-x220-with-a-raspberry-pi/">tylercipriani</a></p><ol><li><a href="//support.lenovo.com/us/en/videos/pd022683">Lenovo guide to remove keyboard and palm rest</a></li><li>Purge any power source of laptop &amp; programmer (rpi2)</li><li>Connect the probe cables between programmer and chip</li><li>Then <strong>only turn on the power source</strong> of programmer</li></ol></li><li><p>(Optional) Extracting the VGA BIOS which is better than SeaVGABios</p><ol><li>More info available at <a href="//nroach44.id.au/index.php/2016/12/11/thinkpad-x220-coreboot-and-me-removal/">nroach44</a> and <a href="//www.coreboot.org/VGA_support#UEFI_Method">coreboot wiki</a></li><li>Download, build <a href="//github.com/LongSoft/UEFITool">uefitool</a>, open factory.rom with uefitool</li><li>Search for text &quot;VGA Compatible BIOS&quot; with unicode <strong>unchecked</strong></li><li>Double click matching result, then extract body of <code>Raw section</code></li><li>(Optional) check word &quot;VGA Display controller&quot; with <code>romheaders</code></li></ol></li><li><p>(Optional) Cleaning up me.bin (now this option is in nconfig)</p><ol><li>More info available at <a href="//nroach44.id.au/index.php/2017/01/24/thinkpad-x220-shrink-the-me-region/">nroach44</a></li><li>Necessary: <code>util/me_cleaner/me_cleaner.py build/coreboot.bin</code></li><li>(Optional) Verify that <code>util/intelmetool/intelmetool -s</code> show
output &quot;Firmware Init Complete&quot; as &quot;NO&quot;</li><li>To proceed - <code>util/me_cleaner/me_cleaner.py me.bin</code> and <code>make</code></li><li><code>hexdump me.bin</code> and check last byte which have tons of <code>ffff</code></li><li><code>dd if=me.bin of=truc.bin bs=1 count=$(printf '%d' 0x00dbc90)</code></li></ol></li><li><p>(Optional) Setting battery threshold</p><ol><li>More info available at <a href="//wej.k.vu/coreboot/coreboot_on_the_lenovo_thinkpad_x220">vej's blog</a></li><li>Build util/ectool</li><li>Battery start threshold 75% - <code>util/ectool -w 0xb1 -z 0x4b</code></li><li>Battery stop threshold 80%  - <code>util/ectool -w 0xb1 -z 0x50</code></li></ol></li><li><p>Building coreboot</p><ol><li><p>More info available at <a href="//www.coreboot.org/Board:lenovo/x220">coreboot wiki x220 page</a></p></li><li><p>First check <code>flashrom -p linux_spi:dev=/dev/spidev0.0</code></p></li><li><p>If it gets an error: poweroff, reconnect pin and boot</p></li><li><p><code>flashrom -p linux_spi:dev=/dev/spidev0.0 -r orig.bin</code></p></li><li><p>Check orig.bin hash &amp; redo step 4-5, not same? step 2</p></li><li><p>Extract the factory binary blob: <code>ifdtool -x orig.bin</code></p></li><li><p>Move outputs to <code>3rdparty/blobs/mainboard/lenovo/x220</code></p></li><li><p>Rename files as &quot;descriptor.bin&quot;, &quot;gbe.bin&quot;, &quot;me.bin&quot;</p></li><li><p><code>make nconfig</code> and tune it accordingly .config (dead)</p></li><li><p>If it builds, verify with step 4-5 twice and finally:</p><pre><code>flashrom -p linux_spi:dev=/dev/spidev0.0 -w build/coreboot.rom
</code></pre></li></ol></li><li><p>After coreboot is flashed, internal flashing can be done by:</p><ul><li><code>iomem=relaxed</code> in cmdline</li><li><code>flashrom -p internal:laptop=force_I_want_a_brick -c MX25L6405 -w build/coreboot.rom --ifd -i bios -n</code></li></ul></li><li><p>Tips and tricks:</p><ul><li>Find bootorder with <code>CONFIG_USE_OPTION_TABLE</code>, <code>CONFIG_CONSOLE_CBMEM</code>,
<code>DEFAULT_CONSOLE_LOGLEVEL_6</code>, then <code>util/cbmem/cbmem -c | grep booto</code>.</li><li>The extra config such as <code>bootorder</code>, <code>config_seabios</code> can be set with
<code>$(top)/src/mainboard/$(MAINBOARDDIR)/*</code> where you can store it inside
<code>src/mainboard/lenovo/x220/</code> to differentiate between different boards.</li></ul></li></ol><p><img src="img/setup1.png" alt="img" /></p><h2>Setting up a testing environment</h2><p>This is just some random stuff how I tested it out with qemu, might help.</p><h2>Setting up full disk encryption</h2><p>For how it is now, I will just draw an image:</p><pre><code>+------------------------+     +------------------------+
| /dev/sda1 111GB (root) |----&gt;| /dev/mapper/p0 (crypt) |-------------+
+------------------------+     +------------------------+             v
| /dev/sda2   8GB (swap) |                                   +-----------------+
+------------------------+                                   | / - btrfs raid0 |
                                                             +-----------------+
+------------------------+     +------------------------+             ^
| /dev/sdb  119GB (root) |----&gt;| /dev/mapper/p1 (crypt) |-------------+ 
+------------------------+     +------------------------+              
</code></pre><ul><li><a href="https://wiki.archlinux.org/index.php/GRUB/Tips_and_tricks">https://wiki.archlinux.org/index.php/GRUB/Tips_and_tricks</a></li><li><a href="https://www.gnu.org/software/grub/manual/grub.html#Security">https://www.gnu.org/software/grub/manual/grub.html#Security</a></li><li><a href="https://www.reddit.com/r/coreboot/comments/4uahg5/coreboot_on_x220_examples_of_grubcfg_with_support">https://www.reddit.com/r/coreboot/comments/4uahg5/coreboot_on_x220_examples_of_grubcfg_with_support</a></li><li><a href="https://notabug.org/vimuser/libreboot/src/master/resources/grub/config">https://notabug.org/vimuser/libreboot/src/master/resources/grub/config</a></li><li><a href="https://www.coreboot.org/GRUB2#Security">https://www.coreboot.org/GRUB2#Security</a></li></ul>]]></content></entry><entry><title>Setting up this site for free</title><link href="http://pickfire.tk/posts/learn/site"/><updated>2018-05-29T05:03:52Z</updated><content type="html"><![CDATA[<h1>Setting up this site for free</h1><p>In the process of creating this site with an abnormal way (using ddns), most
people had told me to give up and go buy a domain, I refuse. And now, here am
I.</p><blockquote><p>First they ignore you, then they laugh at you, then they fight you, then you
win.  -- Mahatma Gandhi</p></blockquote><p><strong>Warning: Always believe in yourselves and never give up during the process.</strong></p><blockquote><p>Patience and diligence, like faith, remove mountains.  -- Willian Penn</p></blockquote><h1>HTTP Setup</h1><h2>Build website</h2><p>Clone the [website source][src] in <code>/srv/www/pickfire.tk/</code>.
Run <code>make</code> with the following <code>config.sh</code>.</p><pre><code>PROT=http://
TARG=/srv/http/pickfire.tk
HOST=pickfire.tk
#TARG=/srv/http/pickfireywcq2wf2.onion  # build with this as well for tor
#HOST=pickfireywcq2wf2.onion
</code></pre><h2>Setup httpd</h2><p>Install <code>h2o</code>.</p><p>Base website with virtual host and tor support.</p><pre><code>hosts:
  &quot;pickfire.tk:80&quot;: &amp;www
    listen: 80
    paths: &amp;www_paths
      /:
        file.dir: /srv/http/pickfire.tk
        file.send-compressed: ON
        access-log: /var/log/h2o/www.log
      /tor:
        fastcgi.spawn: &quot;exec /srv/tor/check/check.cgi&quot;
        access-log: /var/log/h2o/tor.log
      /status: &amp;default_status
        mruby.handler: |
          acl {
            allow { addr == &quot;192.168.1.100&quot; }
            respond(404, {}, [&quot;not found&quot;])
          }
        status: ON
        access-log: /var/log/h2o/status.log
  &quot;pickfireywcq2wf2.onion:80&quot;:
    &lt;&lt;: *www
    paths:
      &lt;&lt;: *www_paths
      /:
        file.dir: /srv/http/pickfireywcq2wf2.onion
        file.send-compressed: ON
  &quot;pickfire.tk:443&quot;:
    listen:
      port: 443
      ssl: &amp;default_ssl
        minimum-version: TLSv1.2
        cipher-suite: ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
        certificate-file: /srv/www/acme.sh/pickfire.tk/fullchain.cer
        key-file: /srv/www/acme.sh/pickfire.tk/pickfire.tk.key
    header.set: &quot;Strict-Transport-Security: max-age=15768000; includeSubDomains&quot;
    paths: *www_paths
</code></pre><p>Use <a href="http://acme.sh">acme.sh</a> as Let's Encrypt client (minimal client for posix shell).</p><pre><code>git clone https://github.com/Neilpang/acme.sh.git
cd acme.sh
./acme.sh --install --home /srv/www/acme.sh
</code></pre><p>Setup certs:</p><pre><code>. /srv/www/acme.sh/acme.sh.env
acme.sh --issue -d pickfire.tk -d www.pickfire.tk -w /srv/http/pickfire.tk
</code></pre><p>For cgit (this took me a while to figure it out):</p><pre><code>&quot;git.pickfire.tk:80&quot;: &amp;git
  listen: 80
  paths: &amp;git_paths
    /cgit.css:
      file.file: /srv/git/cgit.css
      file.send-compressed: ON
    /favicon.ico: &amp;default_ico
      file.file: /srv/www/pickfire.tk/favicon.ico
      file.send-compressed: ON
    /:
      fastcgi.spawn: &quot;exec $H2O_ROOT/share/h2o/fastcgi-cgi&quot;
      setenv:
        SCRIPT_FILENAME: /srv/git/cgit.cgi
      compress: ON
      access-log: /var/log/h2o/git.log
    /status: *default_status
</code></pre><p>For files with auto index:</p><pre><code>&quot;dl.pickfire.tk:80&quot;: &amp;dl
  listen: 80
  paths: &amp;dl_paths
    /:
      file.dir: &quot;/srv/ftp&quot;
      file.dirlisting: ON
      compress: ON
      access-log: /var/log/h2o/dl.log
    /favicon.ico: *default_ico
    /status: *default_status
</code></pre><h2>Setup cgit</h2><p>Install <code>cgit</code>, <code>fcgiwrap</code> (now used the one in <code>h2o</code>).</p><h2>Setup git daemon</h2><p>Install <code>git-daemon</code>.</p><ul><li>Run with <code>--base-path /srv/git</code> for git directory.</li><li>Run without <code>--export-all</code> to prevent auto-export.</li></ul><h2>Bare repository</h2><p>Do <code>git clone --bare</code> for the files.</p><p>Owner of git repository is appended to <code>repo/config</code>.</p><pre><code>[gitweb]
	owner = Ivan Tham &lt;pickfire@riseup.net&gt;
</code></pre><p>Project description in <code>repo/description</code>.</p><h1>DNS setup</h1><p>Aha, free sites</p><h2>DOT.TK</h2><p>Get my domain pickfire.tk here</p><h2>NSD DNS server</h2><p>I use nsd authoritative-only dns server in conjunction with dnsmasq.
(Not applicable anymore after switching to cloudflare DNS)</p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-use-nsd-an-authoritative-only-dns-server-on-ubuntu-14-04">https://www.digitalocean.com/community/tutorials/how-to-use-nsd-an-authoritative-only-dns-server-on-ubuntu-14-04</a></p><h2>Zone file</h2><p>In <code>/etc/nsd/pickfire.tk.zone</code>.</p><pre><code>$ORIGIN pickfire.tk.
$TTL 300

; Start of authority (required)
@       IN      SOA     pickfire.tk.    noone.pickfire.tk. (
                2016071701      ; Serial
                300             ; refresh
                300             ; retry
                2W              ; expire
                1D              ; minimum TTL
                )

; Name servers
        IN      NS      ali.ns.cloudflare.com
        IN      NS      theo.ns.cloudflare.com
        IN      NS      ns101.cloudns.net.
        IN      NS      ns102.cloudns.net.
;       IN      NS      pickfire.epac.to.
;       IN      NS      vince.ddns.info.
;       IN      NS      pickfire.dynamic-dns.net.
;       IN      NS      pickfire.longmusic.com.
;       IN      NS      pickfire.compress.to.

; A records for name servers
;vince.ddns.info.       IN      A       210.195.229.205
;pickfire.epac.to.      IN      A       210.195.229.205

; Resource records
@       IN      A       210.195.229.205
www     IN      A       210.195.229.205
</code></pre><h2>Backup DNS</h2><p>Cloudflare DNS-only with the following dns update script.</p><pre><code>curl -s -X GET &quot;https://api.cloudflare.com/client/v4/zones/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/dns_records&quot; \
  -H &quot;X-Auth-Email: pickfire@riseup.net&quot; \
  -H &quot;X-Auth-Key: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&quot; \
  -H &quot;Content-Type: application/json&quot; \
  | jq -r &quot;.result[] | select(.type == \&quot;A\&quot;) | @sh \&quot;curl -s -w '\n' -X PUT https://api.cloudflare.com/client/v4/zones/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/dns_records/\(.id) -H 'X-Auth-Email: pickfire@riseup.net' -H 'X-Auth-Key: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' -H 'Content-Type: application/json' -d '\&quot; + ({type: \&quot;A\&quot;, name: .name, content: \&quot;$IP\&quot;} | tostring) + \&quot;'\&quot;&quot; \
  | xargs -0 sh -c
</code></pre><h2>Iptables</h2><p>Search Arch wiki for the following.</p><ul><li>sshguard</li><li>filter incoming</li><li>drop ping request</li></ul><h3>Open DNS</h3><p>Using this setup, people could just spoof udp request and use the server as a
bot to ddos other servers. To solve this fast, I did this myself without my
father's help (slow), so I did add an iptables rule. external:53 -&gt; internal:5353</p><pre><code>iptables -t nat -A PREROUTING -s 192.168.1.0/24 -p udp -m udp --dport 53 -j DNAT --to 127.0.0.1:5353
</code></pre><h1>Dynamic DNS service (old setup)</h1><p>I personally used changeip.com after signing up for a few dns service.</p><h2>Port forwarding</h2><p>I am not sure about this. Go ask my father.</p><h1>Tor Hidden Service</h1><p>Why? Firewall isn't Tor-proof, prevent censorship and support a better privacy.</p><h2>Setup Tor hidden service</h2><p>Edit <code>/etc/tor/torrc</code>, private keys in <code>/srv/tor</code> for Alpine <em>data-mode</em>.</p><pre><code>DNSPort 9053

HiddenServiceDir /srv/tor/web/
HiddenServicePort 80 127.0.0.1:80
HiddenServicePort 9418 127.0.0.1:9418
</code></pre>]]></content></entry><entry><title>Privacy Die Hard!</title><link href="http://pickfire.tk/posts/learn/privacy"/><updated>2018-04-06T16:45:16Z</updated><content type="html"><![CDATA[<h1>Privacy Die Hard!</h1><blockquote><p>Arguing that you don't care about the right to privacy because you have
nothing to hide is no different than saying you don't care about free speech
because you have nothing to say.  ── Edward Snowden</p></blockquote><p>Why care about privacy? Think, why do we have door locks for bathroom.</p><p>Isn't the web secure? No, someone might be spying on you, you will never know
who is the man in the middle, he might be a hacker, a robber or even a (what
rhymes with hacker or robber). Who knows?</p><h1>Use Tor</h1><h2>Tor + Privoxy</h2><p>I used this, working so bad so far, always pops out downloads in surf. Hopes
Polipo can filter which to site that is needed to be proxied.</p><h2>Tor + Polipo (old)</h2><p>I had dump Polipo since it must proxy everything to Tor. Setup Tor and Polipo.</p><h2>Filter useless ads</h2><p>/etc/polipo/forbidden with links from</p><h2>TorDNS + dnsmasq (cache)</h2><p>slow</p><h1>Use Encryption</h1><h2>Pretty Good Privacy (PGP)</h2><p>GPG</p><h3>Mutt</h3><p>Mutt build-in GPG support, require GPGME</p><h2>Block-based Encryption</h2><p>dm-crypt + LUKS</p><h2>File-based Encryption</h2><p>EncFS</p><h2>Use encrypted connection</h2><p>If possible use, encrypted connection such as HTTPS, SMTPS, IMAPS. Analyze with
<code>tshark</code> or <code>tcpdump</code>.</p><h2>Don't delete, shred files instead</h2><pre><code>shred -xu
</code></pre><h1>Misc</h1><h2>ROT13</h2><pre><code>tr 'A-Za-z' 'N-ZA-Mn-za-m'
</code></pre><h2>Pen and Paper</h2><p>I forgot the link (video).</p><h2>Random Passphrase</h2><p>xkcd image</p><p>To easily generate a random passphrase using command line:</p><pre><code>aspell dump master | grep -v &quot;'&quot; | shuf -n 4 | tr '\n' ' '
</code></pre><p>What I did before this? I look it up online
<a href="https://duckduckgo.com/?q=random+passphrase">https://duckduckgo.com/?q=random+passphrase</a>.</p>]]></content></entry><entry><title>Moving Fire on the Go! - ABRACADABRA</title><link href="http://pickfire.tk/posts/craft/fire"/><updated>2018-04-06T16:45:16Z</updated><content type="html"><![CDATA[<h1>Moving Fire on the Go! - ABRACADABRA</h1><h2>Pixel Art</h2><p><img src="/pub/fire.png" alt="fire" /></p><p>Some time after I created that unpleasant fire, I make up my mind to create a
better fire (pixel art) that move (partly inspired by an dancing banana image).
I plan to use <a href="//aseprite.org">aseprite</a>.</p><h3>Drawing</h3><p>Draw two image (32x32px each, skip to the <strong>Fixing</strong> to read more about what I
did wrongly) side-by-side to set an alternative image.</p><h3>Animate</h3><p>Use <code>tab</code> to open the timeline and press <code>Alt + n</code> to create a new frame. Try
to rotate some part and modify it to make it looks like it is moving.</p><p><img src="img/fire2.png" alt="img" /></p><h3>Enlarge</h3><p>To enlarge the image, I use <code>imagemagick</code>. Note interesting fork that is fast,
<code>graphicsmagick</code> where everything is prefixed with <code>gm</code>.</p><pre><code>convert input.gif -scale 125% output.gif
</code></pre><p><strong>Note: as a side effect, the fire seems to shake. Nice one <a href="//max-p.me">@Max-P</a></strong></p><h4>Fixing</h4><p>Later on, I figured out not to manually enlarge it but to enlarge the canvas
size by 8px (40px now) and redraw everything.</p><p><img src="img/fire1.png" alt="img" /></p><h3>Inverts</h3><p>After drawing it, I plan to create another image that have blue flame instead
of red flame by extending the canvas size by another 40px horizontally.</p><ol><li>Use <code>Rectangular Marquee Tool</code> or press <code>m</code> and select the red flame.</li><li><code>Ctrl + click</code> and paste the image next to it.</li><li>In <code>Edit -&gt; Invert</code>, ignore green component and apply to all cell in the
sprite.</li></ol><p><img src="img/fire3.png" alt="img" /></p><h3>Outputs</h3><p><img src="/pub/fire.gif" alt="afire" /></p><h3>Integrate</h3><p>Add <code>&lt;a id=fire href=&quot;/&quot;&gt;</code> to <code>index.html</code>. Modify <code>style.css</code>:</p><pre><code>#fire {
	display: inline-block;
	width: 40px; height: 40px;
	background: url(/img/fire.gif);
}
#fire:hover     { background-position:-40px 0; }
#fire:active	{ background-position:-80px 0; }
</code></pre><p>This move the background to another position when it is during hover or active.</p><h3>Optimize</h3><p>The biggest loser of file size is done by hand, I choose to least colors needed
to color the fire (tough choice), normalizing the colors. At last, I reduce the
color palette from ~30 to 7 with the file size reduced by at least by 40% IIRC.</p><p>Rather than separating two different color on a separate position. We can make
use of <code>filter</code> property in CSS to do color invert to reduce file size by ~20%.
Later, I then remove the separate blue block from each frame and have use this:</p><pre><code>#fire {
	display: inline-block;
	margin: 0 5px 5px 0;
	width: 40px; height: 40px;
	text-indent: -9em;
	background-image: url(/pub/fire.gif);
}
#fire:hover		{ background-position:-40px 0; }
#fire:active	{ filter: hue-rotate(90deg); }
</code></pre><p>In addition, use <code>gifsicle</code> and try out option <code>-O</code> and <code>k</code> to shrink it more.</p>]]></content></entry><entry><title>Flashing and Rooting RedMi Note 3</title><link href="http://pickfire.tk/posts/linux/phone"/><updated>2017-02-21T17:06:51Z</updated><content type="html"><![CDATA[<h1>Flashing and Rooting RedMi Note 3</h1><p>I have wanted to root the RedMi Note 3 （红米3）. Looking into the tutorials
online, rooting with Linux for RedMi Note 3 does not seem to be an easy task.</p><p>Some useful guides helps, <a href="//www.androidsage.com/2016/04/09/root-install-twrp-redmi-note-3">unofficial rooting</a> and <a href="//www.miui.com/shuaji-393.html">miui thread</a>.
Hope this guide helps in flash + root RedMi Note 3 officially with Linux. ^^</p><p>How I root? Unlock the bootloader officially, flash with china developer rom
and then root it. Does it really worth it? The official su sucks so nope. :(</p><p><strong>Important</strong>: Read this first, please note that Microsoft Windows is needed
for unlocking the bootloader for MiFlashUnlock, tried wine but does not work.</p><h2>Unlocking Bootloader</h2><p>Rooting does not work on global rom so I use develper rom. Specifically, the
China developer rom which does comes with china apps instead of google apps.</p><ol><li>Request to unlock from <a href="//miui.com/unlock">boot loader</a>.</li><li>Wait for few days (mine took 4 days).</li><li>Download and install the MiFlash on Windows.</li><li>Plug-in the phone and unlock it.</li></ol><p>For mine, <code>红米Note3 全网通 最新 开发版</code>.</p><ul><li>全网通 allows 电信、移动、联通 at the same time</li><li>开发版 is the developer rom</li></ul><h2>Flashing Bootloader</h2><p>After bootloader has been unlocked, use a Linux computer to flash bootloader.</p><ol><li>Get <a href="//wiki.archlinux.org/index.php/Android#Figure_out_device_IDs">device ID</a> (<code>lsusb</code>) and add to udev rules</li><li>Goto fastboot: <code>adb reboot bootloader</code> or hold volume down + power on boot</li><li>Get <code>fastboot getvar product</code>, download rom on <a href="//www.miui.com/shuaji-393.html">miui</a> (check name)</li><li>Boot to fastboot after enabled <code>Enable OEM Unlock</code> in developer options</li><li>After download, uncompress the rom file and run <code>sudo sh flash_all.sh</code></li><li><strong>Note</strong>: Data is gone after flashing</li></ol><h2>Setting up Device</h2><p>After flashing, there's a few things you would like to do:</p><ul><li>root the device - 安全中心 » 权限管理 » 开启ROOT权限</li><li>install google play, apk install fails, use <a href="//www.gugeanzhuangqi.com">谷歌安装器</a></li></ul>]]></content></entry><entry><title>Parallel computing to save time</title><link href="http://pickfire.tk/posts/linux/parallel"/><updated>2017-02-21T17:06:51Z</updated><content type="html"><![CDATA[<!doctype html><html lang="en"><title>Parallel computing to save time</title><meta charset="utf-8"><meta name="description" content="Pickfire's happy website by itself"><meta name="viewport" content="width=device-width, initial-scale=1"><link rel="stylesheet" href="/pub/style.css"><link href=/posts/linux/atom.xml type=application/atom+xml rel=alternate title="Pickfire linux ATOM Feed"><header><a id="fire" href="/">Site </a><span><strong>Posts</strong><span id=info> - <em>Embrace the Unknown</em></span></span></header><menu><span class="left"><a href=/about/>About</a><a href=/links/>Links</a><a href=/posts/ id='here'>Posts</a></span><span class="right"><a id="tor" href="http://pickfireywcq2wf2.onion/">Tor</a></span></menu><nav><ul><li><a href="/posts/craft/">Craft/</a></li><li><a href="/posts/learn/">Learn/</a></li><li><a href="/posts/linux/" class=site>Linux/</a><ul><li><a href="/posts/linux/backup.html">Backup</a></li><li><a href="/posts/linux/block.html">Block</a></li><li><a href="/posts/linux/dev.html">Dev</a></li><li><a href="/posts/linux/fast.html">Fast</a></li><li><a href="/posts/linux/multi-pointer.html">Multi-pointer</a></li><li><a href="/posts/linux/parallel.html" class=site>Parallel</a></li><li><a href="/posts/linux/phone.html">Phone</a></li><li><a href="/posts/linux/setup.html">Setup</a></li></ul></li></ul></nav><main><h1>Parallel computing to save time</h1><h2>Slurm</h2><h2>LDAP</h2><h2>Puppet</h2><h2>Distcc</h2><h2>GNU Parallel</h2></main><footer><span class="right"><a rel="license" href="http://creativecommons.org/licenses/by/4.0/">CC-BY</a>&ensp;<a href="/about/contact.html">Ivan Tham</a><link rel="stylesheet" href="/tor.css">]]></content></entry><entry><title>Multi-pointer in DWM</title><link href="http://pickfire.tk/posts/linux/multi-pointer"/><updated>2017-02-21T17:06:51Z</updated><content type="html"><![CDATA[<h1>Multi-pointer in DWM</h1><p>Multi-pointer can be an alternative to multi-seat. Compared to multi-seat,
multi-pointer is easier to setup (because no multi-seat experience), allows
hardware acceleration and at least one monitor is required. Bad news? Both
shared the same xorg server, most things are shared.</p><p>As of now, no window manager with active development support multi-pointers
with multiple active window. Dwm does not support multi-pointer but here's a
crappy version in which the other users can only control one application
through keyboard since there is only one active window at a time.</p><h2>Configuring inputs</h2><p>One way to configure input devices is via the <code>xinput</code> tool. Without any
arguments given, it should list all the input devices in short format.</p><pre><code>xinput
</code></pre><p>It will print all the master device (cursors on screen) and the slave device
(physical device). Master device comes in pair, which is pointer and keyboard.</p><h2>Adding master device</h2><p>To create another pointer for a new user. First, we add a master device.</p><pre><code>xinput create-master Name
</code></pre><p>Another pointer should appear in the center of the screen by now.</p><h2>Assigning slave device</h2><p>We will then require to assign a slave device to the master device. The <em>id</em> of
the <strong>master</strong> and <strong>slave</strong> device can be found by using <code>xinput</code>.</p><pre><code>xinput reattach &lt;slave&gt; &lt;master&gt;
</code></pre><p>By the end of this, both pointer can move simultaneously but keyboard cannot
type in different application simultaneously, this is normal for window manager
without multi-pointer support.</p><h2>Point master device to window</h2><p>Time to point the master device to the respective window, do this for both
pointer and keyboard master device (not sure if specifying one works).</p><p>The <strong>window</strong> is the PID of window which can be checked with either <code>xprop</code>
(useless sometimes) or <code>xdotool selectwindow</code>.</p><pre><code>xinput set-cp &lt;window&gt; &lt;master&gt;
</code></pre><p>If the setup is successful, the other keyboard should be able to input only in
the window. In which multiple user can play different games at the same time.</p><h2>Cleaning up</h2><p>Remove all the master device that was created.</p><pre><code>xinput remove-master &lt;master&gt;
</code></pre><p>And <code>reattach</code> the pointer or keyboard back to the main master device.</p><h2>Ideas</h2><ul><li>The other could have used Xephyr or Xnest to have his own session instead.</li></ul><h2>See also</h2><ul><li><a href="https://ao2.it/en/blog/2010/01/19/poor-mans-multi-touch-using-multiple-mice-xorg">https://ao2.it/en/blog/2010/01/19/poor-mans-multi-touch-using-multiple-mice-xorg</a></li><li><a href="https://www.x.org/wiki/Development/Documentation/MPX/">https://www.x.org/wiki/Development/Documentation/MPX/</a></li></ul>]]></content></entry></feed>
